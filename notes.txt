write article about xxx

- why xxx

- History of xxx

- How it is adopted in industry

- Does is it still valid

- Drawbacks





Rust attribute:
- Inline
-- Compiler always try to inline a function, const, etc ... to make code run faster which also mean increase the compile time.
-- To modify this behavior, we can use Inline attribute to tell the compiler which we aim to do. E.g: #[inline(never)] which indicate that
	the following block will have their own stack frame

Copy vs Trait
-- Primitive types are implicitly copyable -- Copy trait.
-- It means that you can pass the variables to other variables or as function's argument without losing or sharing the data it involves.
-- For leftover types, usually its hold the memory address in heap.
-- When you do the above thing, the variables losing the ownership of that data.
-- To achieve the same behaviors, you must explicitly implements those two traits via
-- 1. Using the impl the to implement the require methods in Copy and Clone trait
-- 2. Or derive Copy and Clone Atrributes.

-- What is the main different between Copy and Clone
-- Copy is bitwise copy in C++.
-- Clone is you have completely new object T1 from T which identical and store in different address.
-- Modify object T does not affect its cloned T1.

What happens if we drop the T while it has a copy?
-- Nothing, since the copied version has it own location in stack frame.




---- Message Driven and Event Driven

Message is some data sent to a specific address.
Event is some data emitted from a component for anyone listenning to consume.

- Event is a type of message.
In message driven systems, Component A produces a message indicating it must be delivered to the address of component B.
In event driven systems, components announce a location where they exposed their events.

Based on the above descriptions, the message driven is building block for event driven systems.
There are multiple type of message:
- Command: a message send to produce a change on the state. If the receiving component. The command is valid, will update its state. 
- Event: a message emitted by a component when its state changed. E.g: OpeningFile, ClosedFile ...
- Query: a message sent to a component to obtain some information from it. It must include the sender address, so the receiver can send a Reply message.
- Reply: the response to a query.
